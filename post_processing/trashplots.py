plt.figure (4) # its very sad but in the model i mixed up x and y at some point when calculating the distance, so no more distance calculations :(
sns.catplot(data=melt_SpawnersDistances_df, x='Configuration', y='Distance', kind='box')
plt.xticks (rotation=90)
plt.show()

plt.figure (5)
wandering_traveller_x = np.concatenate((TotalSpawnArea_overTime[0, :], TotalSpawnArea_overTime[1, :]))
wandering_traveller_y = np.concatenate((Barbelsw_Access_overTime[0, :], Barbelsw_Access_overTime[1, :]))
focussed_traveller_x = np.concatenate((TotalSpawnArea_overTime[2, :], TotalSpawnArea_overTime[3, :]))
focussed_traveller_y = np.concatenate((Barbelsw_Access_overTime[2, :], Barbelsw_Access_overTime[3, :]))
wandering_homebody_x = np.concatenate((TotalSpawnArea_overTime[4, :], TotalSpawnArea_overTime[5, :]))
wandering_homebody_y = np.concatenate((Barbelsw_Access_overTime[4, :], Barbelsw_Access_overTime[5, :]))
focussed_homebody_x = np.concatenate((TotalSpawnArea_overTime[6, :], TotalSpawnArea_overTime[7, :]))
focussed_homebody_y = np.concatenate((Barbelsw_Access_overTime[6, :], Barbelsw_Access_overTime[7, :]))
plt.scatter (wandering_traveller_x, wandering_traveller_y, label='wandering traveller', s=20, marker='o', color='blue', alpha = 0.5)
plt.scatter (focussed_traveller_x, focussed_traveller_y, label='focussed traveller', s=20, marker='s', color='purple', alpha = 0.5)
plt.scatter (wandering_homebody_x, wandering_homebody_y, label='wandering homebody', s=20, marker='^', color='green', alpha = 0.5 )
plt.scatter (focussed_homebody_x, focussed_homebody_y, label='focussed homebody', s=20, marker='d', color='orange', alpha = 0.5)
plt.legend(loc='best', fontsize='small', frameon=True, fancybox=True, shadow=False)
plt.xlabel ('Total spawn area ($m^2$)' )
plt.ylabel ('Barbel with access to spawnarea (%)')
plt.tight_layout()
plt.show()

fig, ax1 = plt.subplots()

ax1.bar(datetime_vector, Barbelsw_Access_overTime[5,:], color=color1, width = 0.5)
ax1.set_ylabel('Barbel with access to spawning area (%)', color=color1)
ax1.tick_params(axis='y', labelcolor=color1)
ax1.set_xlabel ('Time (hours)')
ax2 = ax1.twinx()
color2 = 'olive'
ax2.plot (datetime_vector, TotalSpawnArea_overTime[5,:], color= color2, linestyle ='-', markersize = 1)
ax2.set_ylabel ('Spawning area ($m^2$)', color=color2)
ax2.tick_params(axis='y', labelcolor=color2)
plt.title ('Spawning area availability in Common Meuse over time')
plt.show()